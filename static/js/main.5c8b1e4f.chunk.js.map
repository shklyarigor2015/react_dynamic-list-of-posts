{"version":3,"sources":["components/User/User.js","constants/proptypes.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["User","PropTypes","shape","name","string","email","address","city","street","body","isRequired","arrayOf","comments","user","object","_ref","react_default","a","createElement","className","defaultProps","Comment","comment","components_User_User","CommentList","map","key","id","components_Comment_Comment","PostItem","post","title","Fragment","components_CommentList_CommentList","PostList","posts","Post_Post","urlUsers","urlPosts","urlComments","getData","url","fetch","then","response","json","getPostsWithComments","postsList","commentsList","userList","_objectSpread","filter","postId","find","item","userId","App","state","users","isLoading","isLoaded","hasError","_this","setState","Promise","all","_ref2","Object","slicedToArray","catch","finally","_this$state","this","length","onClick","type","components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5c8b1e4f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { UserProps } from '../../constants/proptypes';\n\nimport './User.css';\n\nconst User = ({ name, email }) => {\n\n  return (\n    <div>\n      {name && (\n        <p className=\"meta meta__name\">\n          <span>name: </span>\n          {name}\n        </p>\n      )}\n      <p className=\"meta meta__email\">\n        <span>email: </span>\n        {email}\n      </p>\n    </div>\n  );\n};\n\nUser.propTypes = UserProps;\n\nUser.defaultProps = {\n  address: PropTypes.shape({\n    city: null,\n    street: null,\n  }),\n};\n\nexport default User;\n","import PropTypes from 'prop-types';\n\nconst userShape = PropTypes.shape({\n  name: PropTypes.string,\n  email: PropTypes.string,\n  address: PropTypes.shape({\n    city: PropTypes.string,\n    street: PropTypes.string,\n  }),\n});\n\nexport const UserProps = {\n  user: userShape,\n};\n\nconst commentsShape = {\n  body: PropTypes.string,\n  email: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport const CommentProps = {\n  comment: PropTypes.shape({\n    body: PropTypes.string,\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport const CommentsListProps = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      body: PropTypes.string,\n      email: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport const PostItemProps = {\n  post: PropTypes.shape({\n    comments: PropTypes.arrayOf(\n      PropTypes.shape({\n        body: PropTypes.string,\n        email: PropTypes.string,\n        name: PropTypes.string,\n      }).isRequired,\n    ).isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      address: PropTypes.shape({\n        city: PropTypes.string,\n        street: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const PostListProps = {\n  posts: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n","import React from 'react';\nimport User from '../User/User';\nimport { CommentProps } from '../../constants/proptypes';\n\nimport './Comment.css';\n\nconst Comment = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"content\">\n      <User name={name} email={email} />\n      <div className=\"description\">{body}</div>\n    </div>\n  );\n};\n\nComment.propTypes = CommentProps;\n\nexport default Comment;\n","import React from 'react';\nimport Comment from '../Comment/Comment';\nimport { CommentsListProps } from '../../constants/proptypes';\n\nimport './CommentList.css';\n\nconst CommentList = ({ comments }) => (\n  <ul className=\"extra content comment-list\">\n    {comments.map(comment => (\n      <li className=\"comment-list__item\" key={comment.id}>\n        <Comment comment={comment} />\n      </li>\n    ))}\n  </ul>\n);\n\nCommentList.propTypes = CommentsListProps;\n\nexport default CommentList;\n","import React from 'react';\nimport User from '../User/User';\nimport { PostItemProps } from '../../constants/proptypes';\nimport CommentList from '../CommentList/CommentList';\n\nimport './Post.css';\n\nconst PostItem = ({ post }) => {\n  const {\n    title, body, user, comments,\n  } = post;\n  const { name, email, address } = user;\n\n  return (\n    <>\n      <div className=\"content card-item\">\n        <div className=\"header\">{title}</div>\n        <User name={name} email={email} address={address} />\n        <div className=\"description\">{body}</div>\n      </div>\n      <div className=\"extra content\">\n        <span>Comments:</span>\n        <CommentList comments={comments} />\n      </div>\n    </>\n  );\n};\n\nPostItem.propTypes = PostItemProps;\n\nexport default PostItem;\n","import React from 'react';\nimport PostItem from '../Post/Post';\nimport { PostListProps } from '../../constants/proptypes';\n\nimport './PostList.css';\n\nconst PostList = ({ posts }) => (\n  <ul className=\"post-list\">\n    {posts.map(post => (\n      <li className=\"post-list__item ui card\" key={posts.id}>\n        <PostItem post={post} />\n      </li>\n    ))}\n  </ul>\n);\n\nPostList.propTypes = PostListProps;\n\nexport default PostList;\n","import React from 'react';\nimport PostList from './components/PostList/PostList';\nimport './App.css';\n\nconst urlUsers = 'https://jsonplaceholder.typicode.com/users';\nconst urlPosts = 'https://jsonplaceholder.typicode.com/posts';\nconst urlComments = 'https://jsonplaceholder.typicode.com/comments';\n\nconst getData = url => fetch(url).then(response => response.json());\n\nconst getPostsWithComments = (postsList, commentsList, userList) => (\n  postsList\n    .map(post => ({\n      ...post,\n      comments: commentsList.filter(comment => comment.postId === post.id),\n      user: userList.find(item => item.id === post.userId),\n    }))\n);\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    users: [],\n    comments: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false,\n  };\n\n  getData = () => {\n    this.setState({\n      posts: [],\n      isLoading: true,\n      hasError: false,\n    });\n\n    Promise.all([getData(urlPosts), getData(urlUsers), getData(urlComments)])\n      .then(([posts, users, comments]) => {\n        this.setState({\n          posts: getPostsWithComments(posts, users, comments),\n          isLoaded: true,\n          users,\n          comments,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  render() {\n    const {\n      posts,\n      users,\n      comments,\n      isLoading,\n      hasError,\n      isLoaded,\n    } = this.state;\n\n    return (\n      <div className=\"main\">\n        <h1>Dynamic list of posts</h1>\n        <p>\n          <span>posts: </span>\n          {posts.length}\n        </p>\n        <p>\n          <span>users: </span>\n          {users.length}\n        </p>\n        <p>\n          <span>comments: </span>\n          {comments.length}\n        </p>\n        {!posts.length\n        && !users.length\n        && !comments.length\n        && !isLoading\n        && !hasError && (\n          <button\n            onClick={this.getData}\n            type=\"button\"\n          >\n           Loaded\n          </button>\n        )}\n        {isLoading && (\n          <div>\n            <span>Loading...</span>\n          </div>\n        )}\n        {hasError && (\n          <>\n            <h3>Error loading:(</h3>\n            <button\n              type=\"button\"\n              onClick={this.getData}\n            >\n              Try again\n            </button>\n          </>\n        )}\n        {isLoaded && (\n          <>\n            <PostList posts={posts} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}