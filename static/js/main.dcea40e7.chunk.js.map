{"version":3,"sources":["constants/proptypes.js","components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["commentsShape","PropTypes","shape","name","string","email","address","city","street","body","User","isRequired","arrayOf","comments","user","object","_ref","react_default","a","createElement","className","concat","defaultProps","Comment","comment","components_User_User","CommentList","map","key","id","components_Comment_Comment","PostItem","post","title","Fragment","components_CommentList_CommentList","PostList","posts","Post_Post","getUsers","fetch","then","response","json","getPosts","getComments","getPostsWithComments","postsList","commentsList","userList","_objectSpread","filter","postId","find","item","userId","App","state","users","isLoading","isLoaded","hasError","getData","_this","setState","data","Promise","all","catch","finally","_this$state","this","preparedPosts","length","onClick","type","components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.dcea40e7.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst userShape = PropTypes.shape({\n  name: PropTypes.string,\n  email: PropTypes.string,\n  address: PropTypes.shape({\n    city: PropTypes.string,\n    street: PropTypes.string,\n  }),\n});\n\nexport const UserProps = {\n  user: userShape,\n};\n\nconst commentsShape = {\n  body: PropTypes.string,\n  email: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport const CommentProps = {\n  comment: PropTypes.shape({\n    commentsShape,\n  }).isRequired,\n};\n\nexport const CommentsListProps = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      commentsShape,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport const PostItemProps = {\n  post: PropTypes.shape({\n    comments: PropTypes.arrayOf(\n      PropTypes.shape({\n        commentsShape,\n      }).isRequired,\n    ).isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      address: PropTypes.shape({\n        city: PropTypes.string,\n        street: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const PostListProps = {\n  posts: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { UserProps } from '../../constants/proptypes';\n\nimport './User.css';\n\nconst User = ({ name, email, address }) => {\n  const { city, street } = address;\n\n  return (\n    <div>\n      {name && (\n        <p className=\"meta meta__name\">\n          <span>name: </span>\n          {name}\n        </p>\n      )}\n      <p className=\"meta meta__email\">\n        <span>email: </span>\n        {email}\n      </p>\n      <div className=\"meta meta__address\">\n        <p className=\"meta__address--city\">{`city: ${city}`}</p>\n        <p className=\"meta__address--street\">{`street: ${street}`}</p>\n      </div>\n    </div>\n  );\n};\n\nUser.propTypes = UserProps;\n\nUser.defaultProps = {\n  address: PropTypes.shape({\n    city: null,\n    street: null,\n  }),\n};\n\nexport default User;\n","import React from 'react';\nimport User from '../User/User';\nimport { CommentProps } from '../../constants/proptypes';\n\nimport './Comment.css';\n\nconst Comment = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"content\">\n      <User name={name} email={email} />\n      <div className=\"description\">{body}</div>\n    </div>\n  );\n};\n\nComment.propTypes = CommentProps;\n\nexport default Comment;\n","import React from 'react';\nimport Comment from '../Comment/Comment';\nimport { CommentsListProps } from '../../constants/proptypes';\n\nimport './CommentList.css';\n\nconst CommentList = ({ comments }) => (\n  <ul className=\"extra content comment-list\">\n    {comments.map(comment => (\n      <li className=\"comment-list__item\" key={comment.id}>\n        <Comment comment={comment.name} />\n      </li>\n    ))}\n  </ul>\n);\n\nCommentList.propTypes = CommentsListProps;\n\nexport default CommentList;\n","import React from 'react';\nimport User from '../User/User';\nimport { PostItemProps } from '../../constants/proptypes';\nimport CommentList from '../CommentList/CommentList';\n\nimport './Post.css';\n\nconst PostItem = ({ post }) => {\n  const {\n    title, body, user, comments,\n  } = post;\n  const { name, email, address } = user;\n\n  return (\n    <>\n      <div className=\"content card-item\">\n        <div className=\"header\">{title}</div>\n        <User name={name} email={email} address={address} />\n        <div className=\"description\">{body}</div>\n      </div>\n      <div className=\"extra content\">\n        <span>Comments:</span>\n        <CommentList comments={comments} />\n      </div>\n    </>\n  );\n};\n\nPostItem.propTypes = PostItemProps;\n\nexport default PostItem;\n","import React from 'react';\nimport PostItem from '../Post/Post';\nimport { PostListProps } from '../../constants/proptypes';\n\nimport './PostList.css';\n\nconst PostList = ({ posts }) => (\n  <ul className=\"post-list\">\n    {posts.map(post => (\n      <li className=\"post-list__item ui card\" key={post.id}>\n        <PostItem post={post} />\n      </li>\n    ))}\n  </ul>\n);\n\nPostList.propTypes = PostListProps;\n\nexport default PostList;\n","import React from 'react';\nimport PostList from './components/PostList/PostList';\nimport './App.css';\n\nconst getUsers = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json());\n\nconst getPosts = () => fetch('https://jsonplaceholder.typicode.com/posts')\n  .then(response => response.json());\n\nconst getComments = () => fetch('https://jsonplaceholder.typicode.com/comments')\n  .then(response => response.json());\n\nconst getPostsWithComments = (postsList, commentsList, userList) => (\n  postsList\n    .map(post => ({\n      ...post,\n      comments: commentsList.filter(comment => comment.postId === post.id),\n      user: userList.find(item => item.id === post.userId),\n    }))\n);\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    users: [],\n    comments: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false,\n  };\n\n  getData = () => {\n    this.setState({\n      posts: [],\n      isLoading: true,\n      hasError: false,\n    });\n\n    getPosts().then((data) => {\n      this.setState({\n        posts: data,\n      });\n    });\n\n    getUsers().then((data) => {\n      this.setState({\n        users: data,\n      });\n    });\n    getComments().then((data) => {\n      this.setState({\n        comments: data,\n      });\n    });\n\n    Promise.all([getPosts(), getUsers(), getComments()])\n      .then(() => {\n        this.setState({\n          isLoaded: true,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  render() {\n    const {\n      posts,\n      users,\n      comments,\n      isLoading,\n      hasError,\n      isLoaded,\n    } = this.state;\n\n    const preparedPosts = getPostsWithComments(posts, users, comments);\n\n    return (\n      <div className=\"main\">\n        <h1>Dynamic list of posts</h1>\n        <p>\n          <span>posts: </span>\n          {posts.length}\n        </p>\n        <p>\n          <span>users: </span>\n          {users.length}\n        </p>\n        <p>\n          <span>comments: </span>\n          {comments.length}\n        </p>\n        {!posts.length\n        && !users.length\n        && !comments.length\n        && !isLoading\n        && !hasError && (\n          <button\n            onClick={this.getData}\n            type=\"button\"\n          >\n           Loaded\n          </button>\n        )}\n        {isLoading && (\n          <div>\n            <span>Loading...</span>\n          </div>\n        )}\n        {hasError && (\n          <>\n            <h3>Error loading:(</h3>\n            <button\n              type=\"button\"\n              onClick={this.getData}\n            >\n              Try again\n            </button>\n          </>\n        )}\n        {isLoaded && (\n          <>\n            <PostList posts={preparedPosts} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}