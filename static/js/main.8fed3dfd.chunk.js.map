{"version":3,"sources":["constants/proptypes.js","components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["userShape","PropTypes","shape","name","string","email","address","city","street","commentsShape","body","User","isRequired","arrayOf","comments","user","userId","number","id","title","_ref","react_default","a","createElement","className","defaultProps","Comment","comment","components_User_User","CommentList","map","key","components_Comment_Comment","PostItem","post","Fragment","components_CommentList_CommentList","PostList","posts","Post_Post","USERS_API_URL","POSTS_API_URL","COMMENTS_API_URL","getData","url","fetch","then","response","json","getPostsWithComments","postsList","commentsList","userList","_objectSpread","filter","postId","find","item","App","state","users","isLoading","isLoaded","hasError","_this","setState","Promise","all","_ref2","Object","slicedToArray","catch","finally","_this$state","this","length","onClick","type","components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8fed3dfd.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst userShape = PropTypes.shape({\n  name: PropTypes.string,\n  email: PropTypes.string,\n  address: PropTypes.shape({\n    city: PropTypes.string,\n    street: PropTypes.string,\n  }),\n});\n\nexport const UserProps = {\n  user: userShape,\n};\n\nconst commentsShape = {\n  body: PropTypes.string,\n  email: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport const CommentProps = {\n  comment: PropTypes.shape({\n    body: PropTypes.string,\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport const CommentsListProps = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      body: PropTypes.string,\n      email: PropTypes.string,\n      name: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport const PostItemProps = {\n  post: PropTypes.shape({\n    comments: PropTypes.arrayOf(\n      PropTypes.shape({\n        body: PropTypes.string,\n        email: PropTypes.string,\n        name: PropTypes.string,\n      }).isRequired,\n    ).isRequired,\n    user: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      email: PropTypes.string.isRequired,\n      address: PropTypes.shape({\n        city: PropTypes.string,\n        street: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport const PostListProps = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.shape(userShape),\n  })),\n  commentList: PropTypes.arrayOf(\n    PropTypes.shape(commentsShape),\n  ),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { UserProps } from '../../constants/proptypes';\n\nimport './User.css';\n\nconst User = ({ name, email }) => (\n  <div>\n    {name && (\n      <p className=\"meta meta__name\">\n        <span>name: </span>\n        {name}\n      </p>\n    )}\n    <p className=\"meta meta__email\">\n      <span>email: </span>\n      {email}\n    </p>\n  </div>\n);\n\nUser.propTypes = UserProps;\n\nUser.defaultProps = {\n  address: PropTypes.shape({\n    city: null,\n    street: null,\n  }),\n};\n\nexport default User;\n","import React from 'react';\nimport User from '../User/User';\nimport { CommentProps } from '../../constants/proptypes';\n\nimport './Comment.css';\n\nconst Comment = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"content\">\n      <User name={name} email={email} />\n      <div className=\"description\">{body}</div>\n    </div>\n  );\n};\n\nComment.propTypes = CommentProps;\n\nexport default Comment;\n","import React from 'react';\nimport Comment from '../Comment/Comment';\nimport { CommentsListProps } from '../../constants/proptypes';\n\nimport './CommentList.css';\n\nconst CommentList = ({ comments }) => (\n  <ul className=\"extra content comment-list\">\n    {comments.map(comment => (\n      <li className=\"comment-list__item\" key={comment.id}>\n        <Comment comment={comment} />\n      </li>\n    ))}\n  </ul>\n);\n\nCommentList.propTypes = CommentsListProps;\n\nexport default CommentList;\n","import React from 'react';\nimport User from '../User/User';\nimport { PostItemProps } from '../../constants/proptypes';\nimport CommentList from '../CommentList/CommentList';\n\nimport './Post.css';\n\nconst PostItem = ({ post }) => {\n  const {\n    title, body, user, comments,\n  } = post;\n  const { name, email, address } = user;\n\n  return (\n    <>\n      <div className=\"content card-item\">\n        <div className=\"header\">{title}</div>\n        <User name={name} email={email} address={address} />\n        <div className=\"description\">{body}</div>\n      </div>\n      <div className=\"extra content\">\n        <span>Comments:</span>\n        <CommentList comments={comments} />\n      </div>\n    </>\n  );\n};\n\nPostItem.propTypes = PostItemProps;\n\nexport default PostItem;\n","import React from 'react';\nimport PostItem from '../Post/Post';\nimport { PostListProps } from '../../constants/proptypes';\n\nimport './PostList.css';\n\nconst PostList = ({ posts }) => (\n  <ul className=\"post-list\">\n    {posts.map(post => (\n      <li className=\"post-list__item ui card\" key={posts.id}>\n        <PostItem post={post} />\n      </li>\n    ))}\n  </ul>\n);\n\nPostList.propTypes = PostListProps;\n\nexport default PostList;\n","import React from 'react';\nimport PostList from './components/PostList/PostList';\nimport './App.css';\n\nconst USERS_API_URL = 'https://jsonplaceholder.typicode.com/users';\nconst POSTS_API_URL = 'https://jsonplaceholder.typicode.com/posts';\nconst COMMENTS_API_URL = 'https://jsonplaceholder.typicode.com/comments';\n\nconst getData = url => fetch(url).then(response => response.json());\n\nconst getPostsWithComments = (postsList, commentsList, userList) => (\n  postsList\n    .map(post => ({\n      ...post,\n      comments: commentsList.filter(comment => comment.postId === post.id),\n      user: userList.find(item => item.id === post.userId),\n    }))\n);\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    users: [],\n    comments: [],\n    isLoading: false,\n    isLoaded: false,\n    hasError: false,\n  };\n\n  getData = () => {\n    this.setState({\n      posts: [],\n      isLoading: true,\n      hasError: false,\n    });\n\n    Promise.all([\n      getData(POSTS_API_URL),\n      getData(USERS_API_URL),\n      getData(COMMENTS_API_URL),\n    ])\n      .then(([posts, users, comments]) => {\n        this.setState({\n          posts: getPostsWithComments(posts, users, comments),\n          isLoaded: true,\n          users,\n          comments,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          hasError: true,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  render() {\n    const {\n      posts, users, comments, isLoading, hasError, isLoaded,\n    } = this.state;\n\n    return (\n      <div className=\"main\">\n        <h1>Dynamic list of posts</h1>\n        <p>\n          <span>posts: </span>\n          {posts.length}\n        </p>\n        <p>\n          <span>users: </span>\n          {users.length}\n        </p>\n        <p>\n          <span>comments: </span>\n          {comments.length}\n        </p>\n        {!posts.length\n        && !users.length\n        && !comments.length\n        && !isLoading\n        && !hasError && (\n          <button\n            onClick={this.getData}\n            type=\"button\"\n          >\n           Loaded\n          </button>\n        )}\n        {isLoading && (\n          <div>\n            <span>Loading...</span>\n          </div>\n        )}\n        {hasError && (\n          <>\n            <h3>Error loading:(</h3>\n            <button\n              type=\"button\"\n              onClick={this.getData}\n            >\n              Try again\n            </button>\n          </>\n        )}\n        {isLoaded && (\n          <>\n            <PostList posts={posts} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}